name: CI/CD Pipeline - Docker Flask App

on:
  push:
    branches:
      - master  # Triggered when you push changes to the 'master' branch, helping automate continuous integration (CI) and deployment (CD).

jobs:
  build-and-push:
    runs-on: ubuntu-latest  # The job will run on an Ubuntu machine, which works well with DevOps tools and scaling.

    steps:
      # Step 1: Get the latest code
      - name: Checkout code
        uses: actions/checkout@v3
        # Ensures you're always building the latest version of the app, which is key for **deploying** and **scaling** in any environment.

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        # Logs you in securely so you can **deploy** the Docker image and make it easy to **scale** and monitor the app.

      # Step 3: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-app:latest .
        # Builds the Docker image, ensuring the app is **scalable** and easy to run anywhere, making it ready for replication.

      # Step 4: Push the image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:latest
        # **Deploys** the image to Docker Hub, making it available for **monitoring** and allowing the app to **scale** as needed in production.
